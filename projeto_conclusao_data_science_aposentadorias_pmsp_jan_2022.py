# -*- coding: utf-8 -*-
"""projeto_Conclusao_Data_Science_Aposentadorias_PMSP_JAN_2022.ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1n5HUDkP1VhRH6tamFEWM3EcX6WnGrQG1
"""

import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt

# Lê o arquivo, usando a segunda linha (índice 1) como cabeçalho
# e removendo a primeira linha (índice 0)
df = pd.read_csv('portal-iprem-aposentados-01-2022.csv', encoding='latin1', sep=';', header=1)
# evita problemas caso os nomes tenham espaços acidentais
df.columns = df.columns.str.strip()
print(df.head(40))

# Selecionando as colunas corretas
df_selecionado = df[['CARGO BASE', 'Remuneração do Mês']]

# Exibindo as 40 primeiras linhas
print(df_selecionado.head(40))

# Certifique-se de que a coluna é do tipo string antes de manipular
df['Remuneração do Mês'] = df['Remuneração do Mês'].astype(str)

# Remove os pontos (separadores de milhares)
df['Remuneração do Mês'] = df['Remuneração do Mês'].str.replace('.', '', regex=False)

# Substitui as vírgulas por pontos (separadores decimais)
df['Remuneração do Mês'] = df['Remuneração do Mês'].str.replace(',', '.', regex=False)

# Converte para float
df['Remuneração do Mês'] = pd.to_numeric(df['Remuneração do Mês'], errors='coerce')

# Passo 3: Calcular média e preencher valores nulos
media_existente = df['Remuneração do Mês'].mean()
df['Remuneração do Mês'] = df['Remuneração do Mês'].fillna(media_existente)
# Mediana
mediana = df['Remuneração do Mês'].median()

# Moda (pode haver mais de uma)
moda = df['Remuneração do Mês'].mode()

# Desvio padrão
desvio_padrao = df['Remuneração do Mês'].std()

print(f"Média da Remuneração do Mês: {media_existente:.2f}")
print(f"Mediana: {mediana:.2f}")
print(f"Moda: {moda.tolist()}")  # Mostra todas as modas, caso haja mais de uma
print(f"Desvio padrão: {desvio_padrao:.2f}")

# Calcule a média de remuneração por cargo
remuneracao_por_cargo = df.groupby('CARGO BASE')['Remuneração do Mês'].mean().sort_values(ascending=False)

# Selecione os 10 cargos que mais pagam e os 10 que menos pagam
top_10_cargos = remuneracao_por_cargo.head(10)
bottom_10_cargos = remuneracao_por_cargo.tail(10)

# Crie a figura com dois subplots (um para cada gráfico)
plt.style.use('fivethirtyeight') # Estilo de gráfico elegante e simples
fig, axes = plt.subplots(1, 2, figsize=(20, 8))

# Gráfico para os 10 cargos que mais pagam
sns.barplot(x=top_10_cargos.values, y=top_10_cargos.index, ax=axes[0], palette='viridis')
axes[0].set_title('Top 10 Cargos com Maior Remuneração Média', fontsize=16)
axes[0].set_xlabel('Remuneração Média (R$)', fontsize=12)
axes[0].set_ylabel('Cargo', fontsize=12)

# Gráfico para os 10 cargos que menos pagam
sns.barplot(x=bottom_10_cargos.values, y=bottom_10_cargos.index, ax=axes[1], palette='inferno')
axes[1].set_title('Top 10 Cargos com Menor Remuneração Média', fontsize=16)
axes[1].set_xlabel('Remuneração Média (R$)', fontsize=12)
axes[1].set_ylabel('Cargo', fontsize=12)

# Ajuste o layout para que os títulos não se sobreponham
plt.tight_layout()
plt.show()